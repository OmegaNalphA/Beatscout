// AudioAnalyzer.tsx
export function AudioAnalyzer() {
  const [isAnalyzing, setIsAnalyzing] = useState(false);
  const [audioProcessor] = useState(() => new AudioProcessor());
  const [timeData, setTimeData] = useState<Uint8Array>(new Uint8Array(1024).fill(128));
  const [freqData, setFreqData] = useState<Uint8Array>(new Uint8Array(1024).fill(0));
  const [bpm, setBpm] = useState(0);
  const [musicalKey, setMusicalKey] = useState("");
  const { toast } = useToast();

  const analyze = useCallback(() => {
    if (!isAnalyzing || !audioProcessor.isInitialized()) return;
    try {
      const timeData = audioProcessor.getTimeData();
      const freqData = audioProcessor.getFrequencyData();
      
      if (timeData.length > 0) {
        setTimeData(timeData);
      }
      if (freqData.length > 0) {
        setFreqData(freqData);
        setBpm(calculateBPM(freqData));
        setMusicalKey(detectMusicalKey(freqData));
      }
    } catch (error) {
      console.error("Analysis error:", error);
    }
  }, [isAnalyzing, audioProcessor]);

  // ... rest of the component code remains the same ...

  return (
    <div className="flex flex-col gap-4">
      {/* Visualization Section */}
      <div className="grid grid-cols-1 gap-4">
        <div className="h-[20vh] rounded-lg overflow-hidden">
          <WaveformVisualizer audioData={timeData} />
        </div>
        <div className="h-[20vh] rounded-lg overflow-hidden">
          <SpectrumAnalyzer frequencyData={freqData} />
        </div>
      </div>

      {/* Analysis Cards */}
      <div className="grid grid-cols-1 gap-4">
        <div className="w-full">
          <BpmAnalyzer bpm={bpm} />
        </div>
        <div className="w-full">
          <KeyDetector musicalKey={musicalKey} />
        </div>
      </div>

      {/* Controls Section */}
      <div className="mt-4">
        <Button
          onClick={toggleAnalysis}
          size="lg"
          variant={isAnalyzing ? "destructive" : "default"}
          className="w-full h-14 text-lg mb-3"
        >
          {isAnalyzing ? "Stop" : "Start Analysis"}
        </Button>
        <p className="text-sm text-muted-foreground text-center">
          {isAnalyzing ? "Analyzing audio input..." : "Click Start to begin analysis"}
        </p>
      </div>
    </div>
  );
}